{-# language KindSignatures #-}

signature ChannelSig where

import Data.Kind (Type)
import Data.Int (Int32)
import Data.Text (Text)
import Data.Primitive (ByteArray)
import Data.Bytes.Chunks (Chunks)
import Data.Word (Word16)
import Kafka.Exchange.Types (Broker)

-- | Exceptions that can occur while sending data.
data SendException :: Type

-- | Exceptions that can occur while receiving data.
data ReceiveException :: Type

-- | Exceptions that can occur while connecting to broker.
data ConnectException :: Type

showsPrecSendException :: Int -> SendException -> String -> String
showsPrecReceiveException :: Int -> ReceiveException -> String -> String
showsPrecConnectException :: Int -> ConnectException -> String -> String

data M :: Type -> Type

instance Functor M
instance Applicative M
instance Monad M

data Resource :: Type

-- | Connect to a broker.
connect :: 
     Text -- hostname
  -> Word16 -- port
  -> M (Either ConnectException Resource)

-- | The connection is scoped. Performs hostname resolution. The
-- implementation must close the resource after the callback completes.
-- The close operation does not have a way to indicate recoverable
-- failure.
withConnection ::
     Text -- hostname
  -> Word16 -- port
  -> (Either ConnectException Resource -> M a)
  -> M a

send ::
     Resource
  -> Chunks
  -> M (Either SendException ())

receiveExactly ::
     Resource
  -> Int
  -> M (Either ReceiveException ByteArray)
